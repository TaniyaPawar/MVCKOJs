@*customer*@

@model IEnumerable<MVCKO.Models.KOCustomer>

@{
    ViewBag.Title = "Customer Index (KO Version)";
}

<h2>Customer Index (KO Version)</h2>

<p>
    <a href="javascript:void(0);" data-bind="click: createCustomer"
       class="btn-create btn btn-primary">Add Customer</a>
</p>
<table class="table table-responsive table-hover table-striped table-bordered">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.ID)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CustomerName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CustomerAddress)
        </th>
        <th>Actions</th>
    </tr>

    <tbody data-bind="foreach: customers">
        <tr>
            <td data-bind="text: ID"></td>
            <td data-bind="text: CustomerName"></td>
            <td data-bind="text: CustomerAddress"></td>

            <td>
                <a href="javascript:void(0);" data-bind="click: $parent.viewCustomer"
                   class="btn-details btn btn-default">Details</a>
                <a href="javascript:void(0);" data-bind="click: $parent.editCustomer"
                   class="btn-edit btn btn-default">Edit</a>
                <a href="javascript:void(0);" data-bind="click: $parent.deleteCustomer"
                   class="btn-delete btn btn-default">Delete</a>
            </td>
        </tr>
    </tbody>

</table>

<!-- Modal for CRUD operations -->
<div id="my-modal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-body" id="my-modal-content">
                <!-- Modal content goes here -->
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal" id="clsBtn">Close</button>
            </div>
        </div>

    </div>
</div>
<!-- End CRUD Modal -->

@section scripts
{
    <script type="text/javascript">
        ko.validation.rules['decimal'] = {
            validator: function (val, validate) {
                return (validate && /^-?\d*(?:\.\d*)?$/.test(val.toString()));
            },
            message: 'Must be a decimal value.'
        };
        function Customer(data) {
            var self = this;
            self.ID = ko.observable();
            self.CustomerName = ko.observable().extend({
                required: false
            });
            self.CustomerAddress = ko.observable().extend({
                required: false
            });
            if (data) {
                self.ID(data.ID);
                self.CustomerName(data.CustomerName);
                self.CustomerAddress(data.CustomerAddress);
            }
        }

        function CustomerViewModel() {
            var self = this;
            var modalOptions = { "backdrop": "static", keyboard: true };
            self.customers = ko.observableArray();
            self.newCustomer = new Customer();
            self.selectedCustomer = new Customer();

            // Response to 'Create product' click.
            self.createCustomer = function () {
                self.newCustomer = new Customer();
                self.newCustomer.errors = ko.validation.group(self.newCustomer);
                // Get the 'Create' view from server.
                $.ajax({
                    type: "GET",
                    url: "/Customer/Create",
                    datatype: "html",
                    success: function (data) {
                        // Insert the partial view HTML into the bootstrap modal.
                        $('#my-modal-content').html(data);
                        $('#my-modal').modal(modalOptions);
                        // Apply binding to the newly inserted html section.
                        ko.applyBindings(self, document.getElementById('create-customer-form'));
                        $('#my-modal').modal('show');
                    }
                });
            };

            // Response to 'Create' button in the Create view.
            self.createConfirmed = function () {
                if (self.newCustomer.errors().length === 0) {
                    $.ajax({
                        type: "POST",
                        url: "/Customer/Create",
                        data: $('#create-customer-form').serialize(),
                        datatype: "json",
                        success: function (data) {
                            if (data > 0) {
                                // Get the new ID.
                                self.newCustomer.ID(data);
                                // Add the new sale into 'sales' array.
                                self.customers.push(self.newCustomer);
                                $('#my-modal').modal('hide');
                            } else {
                                alert("An error occured, please try again!");
                                $('#my-modal').modal('hide');
                            }
                        }
                    });
                } else {
                    alert("Error! Please check your submission.");

                }
            };

            // "Details" button's action.
            self.viewCustomer= function (data) {
                self.selectedCustomer= data;
                // Get the 'Details' view from server.
                $.ajax({
                    type: "GET",
                    url: "/Customer/Details",
                    datatype: "html",
                    success: function (data) {
                        // Insert the partial view HTML into the bootstrap modal.
                        $('#my-modal-content').html(data);
                        $('#my-modal').modal(modalOptions);
                        // Apply binding to the newly inserted html section.
                        ko.applyBindings(self, document.getElementById('customer-details'));
                        $('#my-modal').modal('show');
                    }
                });
            };

            // "Edit" button's action.
            self.editCustomer = function (data) {
                self.selectedCustomer = data;
                self.newCustomer = new Customer(ko.toJS(data));
                self.newCustomer.errors = ko.validation.group(self.newCustomer);
                // Get the "Edit" view from the server.
                $.ajax({
                    type: "GET",
                    url: "/Customer/Edit",
                    datatype: "html",
                    success: function (data) {
                        // Insert the partial view HTML into the bootstrap modal.
                        $('#my-modal-content').html(data);
                        $('#my-modal').modal(modalOptions);
                        // Apply binding to the newly inserted html section.
                        ko.applyBindings(self, document.getElementById('edit-customer-form'));
                        $('#my-modal').modal('show');
                    }
                });
            };

            // Edit confirmed action.
            self.editConfirmed = function () {
                if (self.newCustomer.errors().length === 0) {
                    // Save new data to the database.
                    $.ajax({
                        type: "POST",
                        url: "/Customer/Edit",
                        data: $('#edit-customer-form').serialize(),
                        success: function (data) {
                            // Update viewModel array.
                            self.customers.replace(self.selectedCustomer, self.newCustomer);
                            $('#my-modal').modal('hide');
                        },
                        error: function (e) {
                            alert(e);
                        }
                    });
                } else {
                    alert("Error! Please check your submission.");

                }
            };

            // "Delete" button's action.
            self.deleteCustomer = function (data) {
                self.selectedCustomer = data;
                // Call the Delete action to get the partial view HTML document.
                $.ajax({
                    type: "GET",
                    url: "/Customer/Delete",
                    datatype: "html",
                    success: function (data) {
                        // Insert the partial view HTML into the bootstrap modal.
                        $('#my-modal-content').html(data);
                        $('#my-modal').modal(modalOptions);
                        // Apply binding to the newly inserted html section.
                        ko.applyBindings(self, document.getElementById('delete-customer'));
                        $('#my-modal').modal('show');
                    }
                });
            };

            // Delete confirmed action.
            self.deleteConfirmed = function () {
                $.ajax({
                    type: "POST",
                    url: "/Customer/Delete",
                    data: $('#delete-customer-form').serialize(),
                    datatype: "html",
                    success: function (data) {
                        // Remove the selected customer from the observable array.
                        self.customers.remove(self.selectedCustomer);
                        $('#my-modal').modal('hide');
                    },
                    error: function (e) {
                        if (e.status == 500) // Foreign key violation.
                            alert("This customer has associated Sale entries. Delete failed!");
                        else
                            alert("Error! Delete failed!");
                    }
                });
            };
        }


        $("document").ready(function () {
            ko.validation.init({
                registerExtenders: true,
                messagesOnModified: true,
                insertMessages: true,
                parseInputAttributes: true,
                errorClass: 'errorStyle',
                messageTemplate: null

            }, true);
            var viewModel = new CustomerViewModel();
            // Get all data from the server and bind them to the view model.
            $.get('/Customer/GetCustomers', function (data) {
                var customer;
                $.each(data, function (i, item) {
                    customer = new Customer(item);
                    viewModel.customers.push(customer);
                })
            });

            ko.validation.registerExtenders();
            ko.applyBindings(viewModel);
        });

    </script>

}